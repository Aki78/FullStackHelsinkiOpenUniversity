{"ast":null,"code":"var _jsxFileName = \"/home/aki/FullStackCourse/Part2/courseinfo/src/Components/Contents.js\";\n//const part1 = \"Fundamentals of React\";\n//const part2 = \"Using props to pass data\";\n//const part3 = \"State of a component\";\nimport { Total } from \"./Total\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Content = ({\n  part,\n  ex\n}) => /*#__PURE__*/_jsxDEV(\"p\", {\n  children: [part, \" \", ex]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 7,\n  columnNumber: 3\n}, this);\n\n_c = Content;\nexport const Contents = ({\n  courses\n}) => /*#__PURE__*/_jsxDEV(_Fragment, {\n  children: [\"courses.map((content, index) => return \", /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"course: \", content.name, content.parts.map((eachCourse, eachIndex) => /*#__PURE__*/_jsxDEV(Content, {\n      part: eachCourse.name,\n      ex: eachCourse.exercises\n    }, eachCourse.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 11\n    }, this)), console.log(content.parts, \"is not\"), /*#__PURE__*/_jsxDEV(Total, {\n      parts: content.parts\n    }, content.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    }, this)]\n  }, index, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 12\n  }, this)]\n}, void 0, true);\n_c2 = Contents;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Content\");\n$RefreshReg$(_c2, \"Contents\");","map":{"version":3,"sources":["/home/aki/FullStackCourse/Part2/courseinfo/src/Components/Contents.js"],"names":["Total","Content","part","ex","Contents","courses","content","name","parts","map","eachCourse","eachIndex","exercises","id","console","log","index"],"mappings":";AAAA;AACA;AACA;AACA,SAASA,KAAT,QAAsB,SAAtB;;;;AAEA,MAAMC,OAAO,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA;AAAR,CAAD,kBACd;AAAA,aACGD,IADH,OACUC,EADV;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;;KAAMF,O;AAMN,OAAO,MAAMG,QAAQ,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,kBACtB;AAAA,qEACS;AAAA,2BACMC,OAAO,CAACC,IADd,EAEFD,OAAO,CAACE,KAAR,CAAcC,GAAd,CAAkB,CAACC,UAAD,EAAaC,SAAb,kBACjB,QAAC,OAAD;AAGE,MAAA,IAAI,EAAED,UAAU,CAACH,IAHnB;AAIE,MAAA,EAAE,EAAEG,UAAU,CAACE;AAJjB,OAEOF,UAAU,CAACG,EAFlB;AAAA;AAAA;AAAA;AAAA,YADD,CAFE,EAUFC,OAAO,CAACC,GAAR,CAAYT,OAAO,CAACE,KAApB,EAA2B,QAA3B,CAVE,eAWP,QAAC,KAAD;AAAwB,MAAA,KAAK,EAAEF,OAAO,CAACE;AAAvC,OAAYF,OAAO,CAACO,EAApB;AAAA;AAAA;AAAA;AAAA,YAXO;AAAA,KAAUG,KAAV;AAAA;AAAA;AAAA;AAAA,UADT;AAAA,gBADK;MAAMZ,Q","sourcesContent":["//const part1 = \"Fundamentals of React\";\n//const part2 = \"Using props to pass data\";\n//const part3 = \"State of a component\";\nimport { Total } from \"./Total\";\n\nconst Content = ({ part, ex }) => (\n  <p>\n    {part} {ex}\n  </p>\n);\n\nexport const Contents = ({ courses }) =>\n  <>courses.map((content, index) => \n    return <div key={index}>\n        course: {content.name}\n        {content.parts.map((eachCourse, eachIndex) => (\n          <Content\n            key={eachCourse.id}\n            key={eachCourse.id}\n            part={eachCourse.name}\n            ex={eachCourse.exercises}\n          />\n        ))}\n        {console.log(content.parts, \"is not\")}\n    <Total key={content.id} parts={content.parts} />\n      </div>\n </> \n\n"]},"metadata":{},"sourceType":"module"}