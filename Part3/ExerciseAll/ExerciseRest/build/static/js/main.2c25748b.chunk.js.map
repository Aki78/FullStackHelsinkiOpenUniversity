{"version":3,"sources":["Components/PrintList.js","Components/MyForm.js","service.js","Components/PrintLog.js","App.js","reportWebVitals.js","index.js"],"names":["PrintList","persons","searchString","deletePerson","map","name","toLowerCase","includes","number","onClick","id","style","borderColor","MyForm","handleNameChange","handleNumberChange","addPerson","handleSearchString","onChange","type","baseUrl","PrintLog","injectMessage","className","length","App","useState","setPersons","newName","setNewName","newNumber","setNewNumber","messageInject","setMessageInject","setSearchString","useEffect","axios","get","then","response","data","console","log","event","preventDefault","target","value","reduce","a","b","selectedObj","find","x","changedPerson","pers","newObject","put","update","post","catch","error","create","concat","newList","filter","item","delete","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2c25748b.chunk.js","sourcesContent":["export const PrintList = ({ persons, searchString, deletePerson }) =>\n  persons.map((persons) => {\n    if (persons.name.toLowerCase().includes(searchString.toLowerCase()))\n      return (\n        <div key={persons.id}>\n          {persons.name} {persons.number} <button onClick={() => deletePerson(persons.id)} style={{ borderColor:\"red\"}}> delete </button>\n        </div>\n      );\n  });\n","export const MyForm = ({\n  handleNameChange,\n  handleNumberChange,\n  handleSearchString,\n  addPerson,\n}) => (\n  <form>\n    <div>\n      name : <input onChange={handleNameChange} />\n    </div>\n    <div>\n      number: <input onChange={handleNumberChange} />\n    </div>\n    <div>\n      <button type=\"submit\" onClick={addPerson}>\n        add\n      </button>\n    </div>\n  </form>\n);\n","import axios from \"axios\";\n//const baseUrl = \"http://localhost:3001/persons\";\nconst baseUrl = \"/persons\";\n\nexport const getAll = () => {\n  const request = axios.get(baseUrl);\n  return request.then((response) => response.data);\n};\n\nexport const create = (newObject) => {\n  const request = axios.post(baseUrl, newObject);\n  return request\n    .then((response) => response.data)\n    .catch(\"tfx\", console.log(error => error.response.data));\n};\n\nexport const update = (id, newObject) => {\n  const request = axios.put(\n    `http://localhost:3001/api/persons/${id}`,\n    newObject\n  );\n  return request.then((response) => response.data);\n};\n","import '../App.css';\n\nexport const PrintLog = ({injectMessage}) => {\n  return <h3 key={injectMessage} className={injectMessage.length > 3? 'logMessage': '' }> {injectMessage }</h3>\n}\n","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { PrintList } from \"./Components/PrintList\";\nimport { MyForm } from \"./Components/MyForm\";\nimport { getAll, create, update } from \"./service\";\nimport { PrintLog } from \"./Components/PrintLog\";\n\nexport const App = () => {\n  const [persons, setPersons] = useState([]);\n  const [newName, setNewName] = useState(\"\");\n  const [newNumber, setNewNumber] = useState(\"\");\n  const [messageInject, setMessageInject] = useState(\"\");\n  const [searchString, setSearchString] = useState(\"\");\n\n  const checkSame = (myObject, myText) => {\n    return myObject.reduce((a, b) => {\n      return b.name === newName || a;\n    }, false);\n  };\n\n  useEffect(() => {\n    const eventHandler = (response) => {\n      console.log(\"promise fulfilled\");\n      console.log(response);\n      setPersons(response);\n    };\n\n    getAll().then(eventHandler);\n  }, []);\n\n  const handleNameChange = (event) => {\n    event.preventDefault();\n    setNewName(event.target.value);\n    console.log(event);\n  };\n  const handleNumberChange = (event) => {\n    event.preventDefault();\n    setNewNumber(event.target.value);\n    console.log(event);\n  };\n  const handleSearchString = (event) => {\n    event.preventDefault();\n    setSearchString(event.target.value);\n    console.log(event);\n  };\n\n  const deletePerson = (id) => {\n    const newList = persons.filter((item) => item.id !== id);\n    axios.delete(`/api/persons/${id}`);\n    setPersons(newList);\n  };\n\n  const addPerson = (event) => {\n    event.preventDefault();\n    if (checkSame(persons, newName)) {\n      const selectedObj = persons.find((x) => x.name === newName);\n      console.log(selectedObj, \"ididid\");\n      const changedPerson = { ...selectedObj, number: newNumber };\n      setPersons(\n        persons.map((pers) =>\n          pers.id === selectedObj.id ? changedPerson : pers\n        )\n      );\n      update(selectedObj.id, { ...selectedObj, number: newNumber });\n      setMessageInject(`Name: ${selectedObj.name}'s number has been changed.`);\n    } else {\n      const newObject = { name: newName, number: newNumber };\n      create(newObject);\n      setMessageInject(`Name: ${newObject.name} has been injected.`);\n      console.log(messageInject);\n      setPersons(persons.concat(newObject));\n    }\n  };\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <PrintLog injectMessage={messageInject} />\n      <div>\n        search : <input onChange={handleSearchString} />\n      </div>\n      <MyForm\n        handleNameChange={handleNameChange}\n        handleSearchString={handleSearchString}\n        handleNumberChange={handleNumberChange}\n        addPerson={addPerson}\n      />\n      <h2>Numbers</h2>\n      <PrintList\n        deletePerson={deletePerson}\n        persons={persons}\n        searchString={searchString}\n      />\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport { App } from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}